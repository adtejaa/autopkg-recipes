---
Identifier: "com.github.adtejaa.jamf.RoyalTSX"
Description: "Uploads Royal TSX to Jamf Pro and makes it available in Self Service."

Input:
  NAME: "Royal TSX"
  SOFTWARE_TITLE: "%NAME%"
  CATEGORY: "Apps"
  POLICY_CATEGORY: "Apps"
  POLICY_NAME: "%NAME%"
  POLICY_RUN_COMMAND: " "
  POLICY_CUSTOM_TRIGGER: "install-%NAME%"
  POLICY_RUN_RECON: "false"
  POLICY_SCOPE_ALL_COMPUTERS: "true"
  POLICY_TEMPLATE: "JamfPolicyTemplate.xml"
  REMOVE_OLD_PACKAGES: "true"
  SELF_SERVICE_AVAILABLE: "true"
  SELF_SERVICE_CATEGORY: "%CATEGORY%"
  SELF_SERVICE_DESCRIPTION: |
    Royal TSX allows IT professionals to securely manage remote connections, including RDP, SSH, and VNC, from a single interface.
  SELF_SERVICE_DISPLAY_NAME: "%NAME%"
  SELF_SERVICE_ICON: "%SOFTWARE_TITLE%.png"
  SELF_SERVICE_INSTALL_BUTTON: "Install"
  SELF_SERVICE_REINSTALL_BUTTON: "Install"
  REPLACE_POLICY: "true"
  PACKAGE_INFO: "autopkg"
  GROUP_NAME: "%NAME%"
  GROUP_TEMPLATE: "JamfSmartGroupTemplate.xml"
  REPLACE_GROUP: "true"
  UPDATE_PREDICATE: "pkg_uploaded == False"
  REPLACE_CATEGORY: "true"

ParentRecipe: "com.github.homebysix.pkg.RoyalTSX"
ParentRecipeTrustInfo:
  non_core_processors: {}
  parent_recipes:
    com.github.homebysix.download.RoyalTSX:
      git_hash: "19bd0c5b391ece09d9c05a78c60426576d630e32"
      path: "~/Library/AutoPkg/RecipeRepos/com.github.autopkg.homebysix-recipes/Royal/RoyalTSX.download.recipe"
      sha256_hash: "a237844597f98a24a5c32d67ff564034ef0f73e423c25d7292a5c21a2bf5adc7"
    com.github.homebysix.pkg.RoyalTSX:
      git_hash: "a26aa3f486024024ed3c022d97d79a7d408b46b7"
      path: "~/Library/AutoPkg/RecipeRepos/com.github.autopkg.homebysix-recipes/Royal/RoyalTSX.pkg.recipe"
      sha256_hash: "b4e44e61ff60847eabd0834a7d648194271535f6fa5969a3bc8464a9ffc44d4b"

Process:
  # 游릭 1. Ensure Category Exists Before Upload
  - Processor: "com.github.grahampugh.jamf-upload.processors/JamfCategoryUploader"
    Arguments:
      category_name: "%CATEGORY%"
      replace_category: "%REPLACE_CATEGORY%"

  # 游릭 2. Ensure Computer Group Exists **Before Policy Upload**
  - Processor: "com.github.grahampugh.jamf-upload.processors/JamfComputerGroupUploader"
    Arguments:
      computergroup_name: "%GROUP_NAME%"
      computergroup_template: "%GROUP_TEMPLATE%"
      replace_group: "%REPLACE_GROUP%"

  # 游릭 3. Upload Package
  - Processor: "com.github.grahampugh.jamf-upload.processors/JamfPackageUploader"
    Arguments:
      pkg_category: "%CATEGORY%"
      pkg_info: "%PACKAGE_INFO%"

  # 游릭 4. Upload Policy **After Group Exists**
  - Processor: "com.github.grahampugh.jamf-upload.processors/JamfPolicyUploader"
    Arguments:
      policy_template: "%POLICY_TEMPLATE%"
      policy_name: "%POLICY_NAME%"
      icon: "%SELF_SERVICE_ICON%"
      replace_policy: "%REPLACE_POLICY%"

  # 游릭 5. Log Last Recipe Run Result
  - Processor: "com.github.grahampugh.recipes.postprocessors/LastRecipeRunResult"

  # 游릭 6. Remove Old Packages (Only If Necessary)
  - Processor: "StopProcessingIf"
    Arguments:
      predicate: "%REMOVE_OLD_PACKAGES% == false"

  - Processor: "com.github.grahampugh.jamf-upload.processors/JamfPackageCleaner"
    Arguments:
      pkg_name_match: "%SOFTWARE_TITLE%-"
      versions_to_keep: 2

  # 游릭 7. Final Stop Processing Check
  - Processor: "StopProcessingIf"
    Arguments:
      predicate: "pkg_uploaded == False"
