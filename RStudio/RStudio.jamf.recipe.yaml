Identifier: com.github.adtejaa.jamf.RStudio
Input:
  APPLICATION_NAME: RStudio.app
  CATEGORY: Apps
  GROUP_NAME: '%NAME%'
  GROUP_TEMPLATE: "JamfSmartGroupTemplate.xml"
  REPLACE_GROUP: 'true'
  REPLACE_CATEGORY: 'true'
  NAME: RStudio
  SOFTWARE_TITLE: RStudio
  POLICY_CATEGORY: '%CATEGORY%'
  POLICY_NAME: '%NAME%'
  POLICY_RUN_COMMAND: ' '
  POLICY_CUSTOM_TRIGGER: 'install-%NAME%'
  POLICY_RUN_RECON: 'false'
  POLICY_SCOPE_ALL_COMPUTERS: 'true'
  POLICY_TEMPLATE: JamfPolicyTemplate.xml
  POLICY_TRIGGER: Install_RStudio
  SELF_SERVICE_DESCRIPTION: RStudio provides open source and enterprise-ready professional software for data science.
  SELF_SERVICE_DISPLAY_NAME: '%NAME%'
  SELF_SERVICE_ICON: '%NAME%.png'
  SELF_SERVICE_AVAILABLE: 'true'
  SELF_SERVICE_CATEGORY: '%CATEGORY%'
  SELF_SERVICE_INSTALL_BUTTON: Install
  SELF_SERVICE_REINSTALL_BUTTON: Install
  REMOVE_OLD_PACKAGES: 'true'
  REPLACE_POLICY: 'true'
  PACKAGE_INFO: 'autopkg'
  UPDATE_PREDICATE: pkg_uploaded == False


ParentRecipe: com.github.novaksam.jamf.RStudio
ParentRecipeTrustInfo:
 
  parent_recipes:
    com.github.novaksam.jamf.RStudio:
      git_hash: a61244e4ab5e9b022e9fddf3c845be1fab4e9bb4
      path: ~/Library/AutoPkg/RecipeRepos/com.github.autopkg.novaksam-recipes/RStudio/RStudio.jamf.recipe
      sha256_hash: fc0815e727c095b4d6560c7978f97c2c1bf715fbabb16c715c31945fcab64d75
    com.github.rtrouton.download.RStudio:
      git_hash: ba9a5f8711a0ac69f74ebf48e1f2588f3a4f7c6c
      path: ~/Library/AutoPkg/RecipeRepos/com.github.autopkg.rtrouton-recipes/RStudio/RStudio.download.recipe
      sha256_hash: f377aba92758b49a84b460f98b5a82591e667f0c463a20449e351f7d3b2e77f5
    com.github.rtrouton.pkg.RStudio:
      git_hash: 84614d29fe664a6afeb95030d8bbbeecb3addca9
      path: ~/Library/AutoPkg/RecipeRepos/com.github.autopkg.rtrouton-recipes/RStudio/RStudio.pkg.recipe
      sha256_hash: e44b033db1916ad44596e4332f560c0a99e32e2c6326b9ca24bcb65deb3331c6


Process:
  # 游릭 1. Ensure Category Exists Before Upload
  - Processor: "com.github.grahampugh.jamf-upload.processors/JamfCategoryUploader"
    Arguments:
      category_name: "%CATEGORY%"
      replace_category: "%REPLACE_CATEGORY%"

  # 游릭 2. Ensure Computer Group Exists **Before Policy Upload**
  - Processor: "com.github.grahampugh.jamf-upload.processors/JamfComputerGroupUploader"
    Arguments:
      computergroup_name: "%GROUP_NAME%"
      computergroup_template: "%GROUP_TEMPLATE%"
      replace_group: "%REPLACE_GROUP%"

  # 游릭 3. Upload Package
  - Processor: "com.github.grahampugh.jamf-upload.processors/JamfPackageUploader"
    Arguments:
      pkg_category: "%CATEGORY%"
      pkg_info: "%PACKAGE_INFO%"

  # 游릭 4. Upload Policy **After Group Exists**
  - Processor: "com.github.grahampugh.jamf-upload.processors/JamfPolicyUploader"
    Arguments:
      policy_template: "%POLICY_TEMPLATE%"
      policy_name: "%POLICY_NAME%"
      icon: "%SELF_SERVICE_ICON%"
      replace_policy: "%REPLACE_POLICY%"

  # 游릭 5. Log Last Recipe Run Result
  - Processor: "com.github.grahampugh.recipes.postprocessors/LastRecipeRunResult"

  # 游릭 6. Remove Old Packages (Only If Necessary)
  - Processor: "StopProcessingIf"
    Arguments:
      predicate: "%REMOVE_OLD_PACKAGES% == false"

  - Processor: "com.github.grahampugh.jamf-upload.processors/JamfPackageCleaner"
    Arguments:
      pkg_name_match: "%SOFTWARE_TITLE%-"
      versions_to_keep: 2

  # 游릭 7. Final Stop Processing Check
  - Processor: "StopProcessingIf"
    Arguments:
      predicate: "pkg_uploaded == False"
